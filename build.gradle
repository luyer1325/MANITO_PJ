plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.leeds.manito'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'mysql:mysql-connector-java:8.0.26'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter'
	annotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'

	// 자동 재빌드용 툴 설치
	implementation 'org.springframework.boot:spring-boot-devtools'
	// jsp 연결
	implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"

	implementation 'com.google.code.gson:gson:2.8.7' // json to string (kakao API 연결시 사용)

	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8' //entity를 DTO자동매핑
} 

tasks.named('test') {
	useJUnitPlatform()
}
